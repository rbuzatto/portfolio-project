
$color-primary   : hsl(179, 60%, 47%);
$card-size       : 6rem;
$zoom-radius     : 5rem;
$options         : frontend backend;
$box-shadow      : 0 2px 4px hsl(181, 11%, 86%);
$box-shadow-hover: 0 4px 8px hsl(181, 11%, 42%);

.area {
  text-align    : center;
  text-transform: uppercase;
  font-weight   : 300;
  font-size     : 1.2rem;
  line-height   : 1;
  letter-spacing: 2px;
  margin-top    : 4rem;
  
  &__option {
    visibility: hidden;
    display: none;
  }
  
  &__expertise {
    height     : auto;
    text-align : center;
    color      : grey;
    margin     : 0 1rem;
    padding    : 0 .5rem;
    border-left: 2px solid transparent;
    cursor     : pointer;
  }
  
  &__labels {
    width     : 25rem;
    padding   : .8rem;
    background: black;
  }

}

.cards {
  display: none;
  margin: 0 -1.2rem;
}
.card {
  margin    : 1.2rem;
  position  : relative;
  height    : $card-size;
  width     : $card-size;
  box-shadow: $box-shadow;
  background: $radial-dark-blue;
  overflow  : hidden;
  cursor    : pointer;

  
  transform: translateY(4rem);
  opacity: 0;
  // transition: all .3s;
  
  &:hover {
    box-shadow: $box-shadow-hover;
  }

  &--show {
    transform: translateY(0);
    opacity: 1;
  }
}

@for $i from 1 through 10 {
  $timeDelay:calc(((#{$i} - 1)*.05s));
  // we add a delay here for mob, cause intro component animates first
  $timeDelayMob : calc(#{$timeDelay} + .5s);

  .cards .card:nth-child(#{$i}) {
      transition: 
      box-shadow .3s,
      transform .2s ease-out $timeDelayMob,
      opacity .2s ease-out $timeDelayMob;
  }

  @include responsiveFor($tablet) {
    .cards .card:nth-child(#{$i}) {
      transition: 
      box-shadow .3s,
      transform .2s ease-out $timeDelay,
      opacity .2s ease-out $timeDelay;
  }
  }
}

.zoomed {
  background     : white;
  border-radius  : 50%;
  width          : 300px;
  height         : 300px;
  position       : absolute;
  top            : 50%;
  left           : 50%;
  transform      : translate(-50%, -50%);
  transition     : all .3s;
  display        : flex;
  justify-content: center;
  align-items    : center;
}

// .card:hover .zoomed {
//   width: $zoom-radius;
//   height: $zoom-radius;
// }

.card:hover .area__logo {
  filter: grayscale(0%);
}

.area__logo {
  position: absolute;
  top     : 50%;
  left    : 50%;
  transform:translate(-50%, -50%);
  transition: filter .2s ease-in-out;
  filter: grayscale(85%);
}

@each $option in $options {
  $color: null;
  @if $option == 'frontend' {
    $color: $color-primary;
  } @else {
    $color: $color-secondary;
  }


  .area__option[value=#{$option}]:checked ~ .cards--#{$option} {
    display: flex;
    flex-wrap: wrap;
  }
  
    .area__option[value=#{$option}]:checked ~ .area__labels .area__expertise[for=#{$option}] {
    color: $color;
    font-weight: 700;
    border-left: 2px solid darken($color, 10%);
  }
}